package Mob;

import java.io.IOException;

import javax.imageio.ImageIO;

import Main.GamePanel;

import java.awt.image.BufferedImage;

import java.awt.*;

public class Virus extends Entity{
    private GamePanel g;
    private int count = 0;
    private boolean canDoDamage;

    public Virus(GamePanel g, int x, int y)
    {
        this.g = g;
        setDefault(x, y);
        setImage();
        setVisible(true);
        solidArea = new Rectangle(x, y, 32, 32);
        setHealth(30);
        canDoDamage=true;
    }

    public void setDefault(int x, int y)
    {
        super.setX(x);
        super.setY(y);
        super.setSpd(6);
    }
    public void setImage()
    {
        try{
            down1 = ImageIO.read(getClass().getResourceAsStream("/Virus/Virus_2.png"));
            left1 = ImageIO.read(getClass().getResourceAsStream("/Virus/Virus_1.png"));
            right1 = ImageIO.read(getClass().getResourceAsStream("/Virus/Virus_3.png"));
        }
        catch(IOException e)
        {
            e.printStackTrace();
        }
    }
    public void update()
    {
        spriteCounter++;
        if(spriteCounter>13)
        {
            if(spriteNum==1)
            {
                spriteNum=2;
            }
            else if(spriteNum==2)
            {
                spriteNum=3;
            }
            else
            {
                spriteNum=1;
            }
            spriteCounter = 0;
        }
        solidArea=new Rectangle(x, y, 32, 32);
    }
    public void draw(Graphics2D gTwo)
    {
        if(getVisible())
        {
            BufferedImage image = null;
            switch(spriteNum)
            {
                case 1:
                    image = down1;
                    break;
                case 2:
                    image = left1;
                    break;
                case 3:
                    image = right1;
                    break;
            }
            gTwo.drawImage(image, x, y, g.getTile(), g.getTile(), null);
        }
    }
    public void move()
    {
        if(count<15)
        {
            x-=speed;
            if(count%5==0)
            {
                y-=speed;
            }
            count++;
        }
        else if(count<30)
        {
            x+=speed;
            if(count%5==0)
            {
                y+=speed;
            }
            count++;
        }
        else
        {
            count=0;
        }
    }
    public void stopDmg()
    {
        canDoDamage=false;
    }
    public boolean getDmg()
    {
        return canDoDamage;
    }
}
